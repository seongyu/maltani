 /*
 * Copyright (c) 2017 Samsung Electronics Co., Ltd All Rights Reserved
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */
var TEST=false;function __onOCFDeviceCallback(devices){var func=window.scplugin.manager.getDeviceDetailFunc;try{var deviceList=window.scplugin._getOCFDevices(JSON.parse(devices));if(func!==null){if(typeof func==="function"){func(deviceList)}else if(typeof func==="string"){eval(func+"(deviceList)")}}}catch(e){console.log(e.name+" "+e.message)}}function __onNMOCFDeviceCallback(json){var result=JSON.parse(json);var f=window.scplugin._scPluginNative.getCallback(result);if(f){setTimeout(function(){try{var deviceList=window.scplugin._getOCFDevices(result.devices);f(deviceList)}catch(e){console.error(e)}},0)}}function __onNMRepresentCallback(json){var result=JSON.parse(json);var f=window.scplugin._scPluginNative.getCallback(result);if(f){setTimeout(function(){try{f(result.result,result.id,result.uri,result.representation)}catch(e){console.error(e)}},0)}}function __onNMStateCallback(json){var result=JSON.parse(json);var f=window.scplugin._scPluginNative.getCallback(result);if(f){setTimeout(function(){try{f(result.state)}catch(e){console.error(e)}},0)}}function __onNMMonitoringStateCallback(json){var result=JSON.parse(json);var f=window.scplugin._scPluginNative.getCallback(result);if(f){setTimeout(function(){try{f(result.result,result.id,result.state)}catch(e){console.error(e)}},0)}}function __onNMPluginDataCallback(json){var result=JSON.parse(json);var f=window.scplugin._scPluginNative.getCallback(result);if(f){setTimeout(function(){try{f(result.key,result.value)}catch(e){console.error(e)}},0)}}(function(window,document,undefined){var isPlatform={Android:function(){return navigator.userAgent.match(/Android/i)},iOS:function(){return navigator.userAgent.match(/iPhone|iPad|iPod/i)},Tizen:function(){return navigator.userAgent.match(/Tizen/i)},Simulator:function(){return navigator.userAgent.match(/Simulator/i)},any:function(){return isPlatform.Android()||isPlatform.iOS()||isPlatform.Tizen()}};var NativeManager=function(){this.CALLBACK_ID_KEY="callbackId";this.LISTENER_ID_KEY="listenerId";var _replyId=0;this._callbacks={};this._listeners={};Object.defineProperties(this,{nextReplyId:{get:function(){return++_replyId},enumerable:false}})};NativeManager.prototype={call:function(cmd,args,callback){args=args||{};var replyId=this.nextReplyId;args[this.CALLBACK_ID_KEY]=replyId;this._callbacks[replyId]=callback;this.callNative(cmd,args)},addListener:function(cmd,name,args,callback){args=args||{};args[this.LISTENER_ID_KEY]=name;this._listeners[name]=callback;this.callNative(cmd,args)},removeListener:function(cmd,name,args){args=args||{};if(this._listeners.hasOwnProperty(name)){delete this._listeners[name]}this.callNative(cmd,args)},callNative:function(cmd,args){args=args||{};try{if(isPlatform.iOS()){window.webkit.messageHandlers[cmd].postMessage(args)}else if(isPlatform.Android()||isPlatform.Simulator()){if(Object.keys(args).length==0){eval("SC_PLUGIN."+cmd+"()")}else{eval("SC_PLUGIN."+cmd+".apply(SC_PLUGIN,[JSON.stringify(args)])")}}else if(isPlatform.Tizen()){eval(cmd+".postMessage(args)")}else{console.log("Not supported platform - "+navigator.userAgent)}}catch(e){console.log(e.name+" "+e.message)}},getCallback:function(result){var id;if(result.hasOwnProperty(this.CALLBACK_ID_KEY)){id=result[this.CALLBACK_ID_KEY];if(typeof this._callbacks[id]!=="function"){console.error("Wrong callback identifier. Ignoring message.");return null}var f=this._callbacks[id];delete this._callbacks[id];return f}if(result.hasOwnProperty(this.LISTENER_ID_KEY)){id=result[this.LISTENER_ID_KEY];if(typeof this._listeners[id]!=="function"){console.error("Wrong callback identifier. Ignoring message.");return null}var f=this._listeners[id];return f}}};var manager=function(){this.getDeviceDetailFunc=null};manager.prototype={setCloudConnectionStateListener:function(callback){var cmd="scpluginSetCloudConnectionStateListener";var args={};args.callbackName="__onNMStateCallback";args.cmd=cmd;window.scplugin._scPluginNative.addListener(cmd,cmd,args,callback)},setApplicationStateListener:function(callback){var cmd="scpluginSetChangeApplicationStateListener";var args={};args.callbackName="__onNMStateCallback";args.cmd=cmd;window.scplugin._scPluginNative.addListener(cmd,cmd,args,callback)},getOCFDevices:function(callback){if(TEST){this.getDeviceDetailFunc=callback;var info=JSON.stringify(window.deviceInfo);__onOCFDeviceCallback("["+info+"]")}else{var cmd="scpluginGetOCFDevices";var args={};args.callbackName="__onNMOCFDeviceCallback";args.cmd=cmd;window.scplugin._scPluginNative.call(cmd,args,callback)}},getPluginData:function(deviceHandle,key,callback){var cmd="scpluginGetPluginData";var args={};args.id=deviceHandle;args.callbackName="__onNMPluginDataCallback";args.key=key;args.cmd=cmd;window.scplugin._scPluginNative.call(cmd,args,callback)},setPluginData:function(deviceHandle,key,value){var cmd="scpluginSetPluginData";var args={};args.id=deviceHandle;args.key=key;args.value=value;window.scplugin._scPluginNative.callNative(cmd,args)},deletePluginData:function(deviceHandle,key){var cmd="scpluginDeletePluginData";var args={};args.id=deviceHandle;args.key=key;window.scplugin._scPluginNative.callNative(cmd,args)},close:function(){var cmd="scpluginClose";window.scplugin._scPluginNative.callNative(cmd)}};var log=function(){};log.prototype={debug:function(className,functionName,msg){var cmd="scpluginDebugLog";var args={};args.className=className;args.functionName=functionName;args.msg=msg;window.scplugin._scPluginNative.callNative(cmd,args)},error:function(className,functionName,msg){var cmd="scpluginErrorLog";var args={};args.className=className;args.functionName=functionName;args.msg=msg;window.scplugin._scPluginNative.callNative(cmd,args)},info:function(className,functionName,msg){var cmd="scpluginInfoLog";var args={};args.className=className;args.functionName=functionName;args.msg=msg;window.scplugin._scPluginNative.callNative(cmd,args)},verbose:function(className,functionName,msg){var cmd="scpluginVerboseLog";var args={};args.className=className;args.functionName=functionName;args.msg=msg;window.scplugin._scPluginNative.callNative(cmd,args)},warning:function(className,functionName,msg){var cmd="scpluginWarningLog";var args={};args.className=className;args.functionName=functionName;args.msg=msg;window.scplugin._scPluginNative.callNative(cmd,args)}};var OCFDevice=function(args){Object.defineProperties(this,{deviceHandle:{value:args.deviceHandle,writable:false,enumerable:true},deviceType:{value:args.deviceType,writable:false,enumerable:true},deviceName:{value:args.deviceName,writable:false,enumerable:true},resourceUris:{value:args.resourceUris,writable:false,enumerable:true},locationId:{value:args.locationId,writable:false,enumerable:true},locationName:{value:args.locationName,writable:false,enumerable:true},owner:{value:args.owner,writable:false,enumerable:true},firmwareVersion:{value:args.firmwareVersion,writable:false,enumerable:true},metaData:{value:args.metaData,writable:false,enumerable:true}})};OCFDevice.prototype={subscribe:function(callback,uris){var cmd="scpluginSubscribe";var args={};args.id=this.deviceHandle;args.callbackName="__onNMRepresentCallback";args.uris=uris;args.cmd=cmd;window.scplugin._scPluginNative.addListener(cmd,cmd+this.deviceHandle,args,callback)},unsubscribe:function(){var cmd="scpluginUnsubscribe";var args={};args.id=this.deviceHandle;window.scplugin._scPluginNative.removeListener(cmd,"scpluginSubscribe"+this.deviceHandle,args)},getRemoteRepresentation:function(uri,callback){var cmd="scpluginGetRemoteRepresentation";var args={};args.id=this.deviceHandle;args.callbackName="__onNMRepresentCallback";args.uri=uri;args.cmd=cmd;window.scplugin._scPluginNative.call(cmd,args,callback)},setRemoteRepresentation:function(uri,jsonObject,callback){var cmd="scpluginSetRemoteRepresentation";var args={};args.id=this.deviceHandle;args.callbackName="__onNMRepresentCallback";args.uri=uri;args.rcsRepJson=jsonObject;args.cmd=cmd;window.scplugin._scPluginNative.call(cmd,args,callback)},startMonitoringConnectionState:function(callback){var cmd="scpluginStartMonitoringConnectionState";var args={};args.id=this.deviceHandle;args.callbackName="__onNMMonitoringStateCallback";args.cmd=cmd;window.scplugin._scPluginNative.addListener(cmd,cmd+this.deviceHandle,args,callback)},stopMonitoringConnectionState:function(){var cmd="scpluginStopMonitoringConnectionState";var args={};args.id=this.deviceHandle;window.scplugin._scPluginNative.removeListener(cmd,"scpluginStartMonitoringConnectionState"+this.deviceHandle,args)}};var _scplugin=function(){this.manager=new manager;this.log=new log;this._scPluginNative=new NativeManager};_scplugin.prototype._getOCFDevices=function(devices){var deviceList=new Array;for(var i in devices){deviceList.push(new OCFDevice(devices[i]))}return deviceList};window.scplugin=new _scplugin})(window,document);